name: Deploy

on:
  push:
    branches:
      - prod

jobs:
  # Call the build workflow
  build:
    name: Build
    uses: ./.github/workflows/build.yaml
  deploy:
    name: Deploy
    needs: build
    environment:
      name: Production
      url: https://discord.com/oauth2/authorize?client_id=999712607227359274&permissions=0&scope=bot
    runs-on: ubuntu-latest

    # Install Docker if not installed, pull the built images, stop any previous containers and start the new ones
    steps:
      - uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            cd ~

            sudo apt-get -y update
            sudo apt-get -y upgrade
            sudo apt-get -y autoclean
            sudo apt-get -y autoremove

            sudo apt-get -y install ca-certificates curl
            sudo install -m 0755 -d /etc/apt/keyrings
            sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc
            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
              $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
              sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get -y update
            sudo apt-get -y install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

            sudo docker context create prod --docker "host=ssh://${{ secrets.USERNAME }}@${{ secrets.HOST }}"
            sudo docker context use prod
            sudo docker compose down --remove-orphans --volumes
            sudo docker compose pull
            sudo docker compose --detach
